name: Build

on: [push, pull_request]

jobs:
  linux:
    strategy:
      matrix:
        arch: ["x86-64-bmi2", "x86-64-avx2", "x86-64-sse41-popcnt", "x86-64-ssse3", "x86-64-sse3-popcnt", "x86-64"]
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - run: echo "CXXFLAGS=-DNNUE_EMBEDDING_OFF" >> $GITHUB_ENV
    - run: cd src && make ARCH=${{ matrix.arch }} profile-build && strip stockfish
    - run: ./src/stockfish compiler
    - run: mv ./src/stockfish stockfish-${{ matrix.arch }}
    - uses: actions/upload-artifact@v2
      with:
        name: stockfish
        path: stockfish-*
  windows:
    strategy:
      matrix:
        arch: ["x86-64-bmi2", "x86-64-avx2", "x86-64-sse41-popcnt", "x86-64-ssse3", "x86-64-sse3-popcnt", "x86-64"]
    runs-on: windows-2016
    steps:
    - uses: actions/checkout@v2
    - run: echo "CXXFLAGS=-DNNUE_EMBEDDING_OFF" >> ${env:GITHUB_ENV}
    - run: cd src && make ARCH=${{ matrix.arch }} COMP=mingw profile-build && strip stockfish.exe
    - run: ./src/stockfish compiler
    - run: mv ./src/stockfish.exe stockfish-${{ matrix.arch }}.exe
    - uses: actions/upload-artifact@v2
      with:
        name: stockfish
        path: stockfish-*
  macos:
    strategy:
      matrix:
        include:
        - arch: x86-64-bmi2
          build: build
        - arch: x86-64-avx2
          build: build
        - arch: x86-64-sse41-popcnt
          build: profile-build
        - arch: x86-64-ssse3
          build: profile-build
        - arch: x86-64-sse3-popcnt
          build: profile-build
        - arch: x86-64
          build: profile-build
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
    - run: echo "CXXFLAGS=-DNNUE_EMBEDDING_OFF" >> $GITHUB_ENV
    - run: cd src && make ARCH=${{ matrix.arch }} ${{ matrix.build }} && strip stockfish
    - run: ./src/stockfish compiler
      if: ${{ matrix.build == 'profile-build' }}
    - run: mv ./src/stockfish stockfish-macos-${{ matrix.arch }}
    - uses: actions/upload-artifact@v2
      with:
        name: stockfish
        path: stockfish-*
  aarch64:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - uses: uraimo/run-on-arch-action@v2.0.5
      with:
        arch: aarch64
        distro: ubuntu18.04
        run: apt-get update && apt-get install -y wget make g++ binutils && cd src && CXXFLAGS=-DNNUE_EMBEDDING_OFF make ARCH=armv8 profile-build && strip stockfish && ./stockfish compiler
    - run: mv ./src/stockfish stockfish-armv8
    - uses: actions/upload-artifact@v2
      with:
        name: stockfish
        path: stockfish-*

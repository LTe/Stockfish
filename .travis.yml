language: cpp
sudo: required
dist: trusty

matrix:
  include:
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-6', 'g++-6-multilib', 'g++-multilib', 'valgrind', 'expect']
      env:
        - COMPILER=g++-6
        - COMP=gcc
        - DEPLOY=stockfish
      sudo: required
      services:
        - docker

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['clang', 'g++-multilib', 'valgrind', 'expect']
      env:
        - COMPILER=clang++
        - COMP=clang

    - os: osx
      compiler: gcc
      env:
        - COMPILER=g++
        - COMP=gcc

    - os: osx
      compiler: clang
      env:
        - COMPILER=clang++ V='Apple LLVM 6.0' # Apple LLVM version 6.0 (clang-600.0.54) (based on LLVM 3.5svn)
        - COMP=clang
        - DEPLOY=stockfish-osx

branches:
  only:
   - master
   - snapshots

before_script:
  - cd src

script:
  # Obtain bench reference from git log
  - git log HEAD | grep "\b[Bb]ench[ :]\+[0-9]\{7\}" | head -n 1 | sed "s/[^0-9]*\([0-9][0-9]*\)/\1/g" > git_sig
  - export benchref=$(cat git_sig)
  - echo "Reference bench:" $benchref
  #
  # Verify bench number against various builds
  - export CXXFLAGS=-Werror
  - make clean && make -j2 ARCH=x86-64 optimize=no debug=yes build && ../tests/signature.sh $benchref
  - make clean && make -j2 ARCH=x86-32 optimize=no debug=yes build && ../tests/signature.sh $benchref
  - make clean && make -j2 ARCH=x86-32 build && ../tests/signature.sh $benchref
  - make clean && make -j2 ARCH=x86-64 build && ../tests/signature.sh $benchref
  #
  # Check perft and reproducible search
  - ../tests/perft.sh
  - ../tests/reprosearch.sh
  #
  # Valgrind
  #
  - export CXXFLAGS=-O1
  - if [ -x "$(command -v valgrind )" ]; then make clean && make -j2 ARCH=x86-64 debug=yes optimize=no build > /dev/null && ../tests/instrumented.sh --valgrind; fi
  - if [ -x "$(command -v valgrind )" ]; then ../tests/instrumented.sh --valgrind-thread; fi
  #
  # Sanitizer
  #
  # Use g++-6 as a proxy for having sanitizers, might need revision as they become available for more recent versions of clang/gcc
  - if [[ "$COMPILER" == "g++-6" ]]; then make clean && make -j2 ARCH=x86-64 sanitize=undefined optimize=no debug=yes build > /dev/null && ../tests/instrumented.sh --sanitizer-undefined; fi
  - if [[ "$COMPILER" == "g++-6" ]]; then make clean && make -j2 ARCH=x86-64 sanitize=thread    optimize=no debug=yes build > /dev/null && ../tests/instrumented.sh --sanitizer-thread; fi

  #
  # Build snapshot
  #
  - if [[ "$DEPLOY" == "stockfish" ]]; then make clean && docker build --tag wheezy-for-sf -f ../deploy/wheezy.dockerfile . && docker run --volume "$PWD/..:/home/builder/Stockfish" --user $(id -u) wheezy-for-sf; fi
  - if [[ "$DEPLOY" == "stockfish-osx" ]]; then make clean && make build ARCH=x86-64 EXE=../stockfish-osx-x86_64; fi

addons:
  artifacts:
    bucket: variant-stockfish
    s3_region: us-west-2
    paths: $(ls $DEPLOY-*)
    target_paths: ddugovic
    cache_control: public
    key:
      secure: Q+ep2DL+HlYe4jzf4hHRT/0d5oAvyL1DLW7jLhLpukZMaUuOR4MA3MeBiLUjG5cvCoprrTL0YFEdX4dlr7xEj8L/XGPHO4WEzPGThXiK3pTeRRz8V32+9oeqmLeTBAcVXtp6O5xKGna75isNDdDm9jpTBSA5iGQ/wvrXc+rS5RmhAVeVs/Un94fkOd+yWOkGsl1GWx7D9kwUsUaB7jzM34jM+WFhk26uJUQuFTa4VWe/j73uAiWDYiPmpveB2tYWMrD/xmEkrQ8apzhiPkaMBigjLgyYlaEDugoQ9tZYML+/98PiGB1EFiYnydNZpFNtO2jfKN9VPt6Poun+Fhj8jkS07hSBYtId6d1PvbQCjCR6eOak8q3phGraXlly41sq+O9C+RZ64MdgBT0OHzCrE63VZUzB9hZEbeHNH35ZyL1ytMb5SWNzgqb3VkWugITIl8nel+mbSjWgV4fzHOpC4Je7uOiywRvMbdWwBoJ7PSJ72f9GQMJ2Ibc0gQ7+LwxeK7NSsYtd3FZdTfxEp/8a6imCdjuM8huCPXqQxxu8Qp6F3+FiCnJev8+zlNDJlZ9gYi/7Fcfg4QqlbX8kWLhDR4U2ecP/6i+qSZ0mMOM7eNSLbyO5eFZbbYz9UW9IQasrF0PYc94S/dkK+QOtH8BKeVYLgHnKLquX2nMy1lb+Ug0=
    secret:
      secure: OWJPxKbGK4xyIkHMqUE100hfXLd4QHAQXLaYj5PemcJxT9vbWurrWHCtkIqhikKMgw6ii12JrdGvOd/wT31ZMR3g1xxc5cu0/cRx1zyBNZkGEScVZE6R3Y1Y5Y812xFY98mdq84mGILsS+mlL0HUqv68331kxTnWHLc8h+59wSOviPUzDCmyAarMd+AfHLqEi4QqR5g377TXImKFhSzOvpQtSlK3LH1Kfyl1LlPlVhBGf7jNlECr7GTGy1y89ahMF4ZEYDQED4qD2IbA988FaaN7GYQWQZ9esZ9mVMco+CIfjk/0+3+6K99tqQYFU7MW4w7AVwCnQqMLZZHz7JlCAInRv99fx3G4QHwjaZbTbfNashHKC7qu1Wvvqsim2RSLb+RkEH/cUXT6PcUHL1K/muHypHDYHxyY7dj8M35rTXaDjYypl0hmGxWPLLoqH7jJRXQpW3Z6ho+4ThTAlQZ3qoBMW+Ses53v93clq6Hr9RaVWNHZ2mCnq/6LAHWz19TPVu3QyrP6nhO1XM1/t/zFsvjTe83/Rp/kRxOjUksUjQRpvlHW4OoxjerQQ8Gu+K+fW6hdryPFyO1hpkJpQ0vPOBRuK81HAIN9BRf9CREhdJ4rj1PvYocKk0FqZVaJIHUtW2jwcwtxAIPephLJJvLyhwa6yx0veeSXSQW0domzxnA=
